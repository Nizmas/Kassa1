@model Kassa1.Models.ClientInfo

@{
    ViewBag.Title = "Kassa #1";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/jquery-3.4.1.js"></script>
<script src="~/Scripts/jquery.validate-vsdoc.js"></script>
<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
<script src="~/Scripts/print.min.js"></script>

<script type="text/javascript">
    function printFile() {
        //event.preventDefault();
        //document.forms["myform"].submit();
        document.myform2.submit();
        var date = new Date();
        var months = ["января", "февраля", "марта", "апреля", "мая", "июня",
            "июля", "августа", "сентября", "октября", "ноября", "декабря"];
        var dateString = date.getDate() + " " + months[date.getMonth()] + " " + date.getFullYear() + " г";
        var fileName = $("#TemplateName").val().replace(".docx", " ") + $("#FirstName").val() + " " + $("#LastName").val() + " от " + dateString + ".docx";
        console.log(fileName)
        const url = "https://localhost:44306/formular/printfile?fileName=" + fileName;  
        printJS({
            printable: url,
            type: 'pdf'
        });
    };
</script>

<script type="text/javascript">
    function sform() {
        document.forms["myform"].submit();
        console.log('huy')
    }
</script>

<div>
    <h3>Заполнение шаблона документа</h3> <br />
    @{Html.EnableClientValidation();}
    @{Html.EnableUnobtrusiveJavaScript();}

    @*@using (Html.BeginForm("Create", "Formular", FormMethod.Post, new { encType = "multipart/form-data", @id = "myform", name = "myform2" }))*@
    @using (Ajax.BeginForm("Create", new AjaxOptions
        {
            UpdateTargetId = "results",
            LoadingElementId = "loading",
            LoadingElementDuration = 1000
        }))
    {
        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
        @Html.TextBoxFor(model => model.LastName, htmlAttributes: new { @Placeholder = "Иванов" })
        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })

        <br /><br />
        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
        @Html.TextBoxFor(model => model.FirstName, htmlAttributes: new { @Placeholder = "Иван" })
        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        <br /><br />
        @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label col-md-2" })
        @Html.TextBoxFor(model => model.MiddleName, htmlAttributes: new { @Placeholder = "Иванович" })
        @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
        <br /><br />
        @Html.LabelFor(model => model.LoanSum, htmlAttributes: new { @class = "control-label col-md-2" })
        @Html.TextBoxFor(model => model.LoanSum, htmlAttributes: new { @Placeholder = "Иванов" })
        @Html.ValidationMessageFor(model => model.LoanSum, "", new { @class = "text-danger" })
        <br /><br />
        @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
        </div>
        <br /> <br />
        @Html.TextBoxFor(model => model.Image, new { type = "file" })
        @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
        <br />
        <div>
            @Html.DropDownListFor(model => model.TemplateName, ViewBag.Templates as SelectList)
            @Html.ValidationMessageFor(model => model.TemplateName, "", new { @class = "text-danger" })
        </div>
        <br />
        <p><input type="submit" name="submit" value="Скачать" id="createDoc" /></p>
        <p><input type="submit" name="submit" value="Распечатать" id="createDoc" /></p>
    }
    <div id="loading" style="display:none; color:Red; font-weight:bold;">
        <p>Идет загрузка...</p>
    </div>
    <div id="results"></div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        var date = new Date();
        var months = ["января", "февраля", "марта", "апреля", "мая", "июня",
            "июля", "августа", "сентября", "октября", "ноября", "декабря"];
        var dateString = date.getDate() + " " + months[date.getMonth()] + " " + date.getFullYear() + " г";
        var url = "";

        var target = "";
            $(':input').focus(function () {
                target = $(this).val();
            });

        $("#myform").submit(function (event) {
            if (target == "Скачать") console.log("Скачать");

            if (target == "Распечатать") {
                console.log("Распечатать");
                fileName = $("#TemplateName").val().replace(".docx", " ") + $("#FirstName").val() + " " + $("#LastName").val() + " от " + dateString + ".pdf";
                console.log(fileName)
                url = "https://localhost:44340/formular/printfile?fileName=" + fileName;
                window.setTimeout(Printer, 4000); 
            }
        });

        function Printer() {
            console.log("Printing has been launched");
            printJS({
                printable: url,
                type: 'pdf'
            })
        }
    });
</script>